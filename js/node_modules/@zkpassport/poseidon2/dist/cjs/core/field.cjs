"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/core/field.ts
var field_exports = {};
__export(field_exports, {
  F1Field: () => F1Field
});
module.exports = __toCommonJS(field_exports);
var F1Field = class {
  constructor(prime) {
    this.zero = BigInt(0);
    this.one = BigInt(1);
    this.prime = prime;
  }
  e(x) {
    if (typeof x === "bigint") {
      return x % this.prime;
    } else {
      return BigInt(x) % this.prime;
    }
  }
  add(x, y) {
    return (x + y) % this.prime;
  }
  sub(x, y) {
    return (this.prime + x - y) % this.prime;
  }
  mul(x, y) {
    return x * y % this.prime;
  }
  square(x) {
    return x * x % this.prime;
  }
  div(x, y) {
    return x / y % this.prime;
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  F1Field
});
